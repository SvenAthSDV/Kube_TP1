image: docker:latest

services:
  - docker:dind  # Docker-in-Docker

stages:
  - build


variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/myapp

Build:
  stage: build
  script:
    - echo "Connexion au registre GitLab..."
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

    - echo "Utilisation du tag Git pour la version..."
    - if [ -z "$CI_COMMIT_TAG" ]; then echo "Erreur  Pas de tag Git défini"; exit 1; fi
    - VERSION_TAG="$CI_COMMIT_TAG"
    - echo "Tag de version  $VERSION_TAG"

    - echo "Création du contexte de build..."
    - mkdir -p build_context
    - cp -r myapp/* build_context/

    - echo "Construction de l'image Docker..."
    - cd build_context
    - docker build -t $CI_REGISTRY_IMAGE/myapp:$VERSION_TAG .

    - echo "Poussée de l'image dans le registre GitLab..."
    - docker push $CI_REGISTRY_IMAGE/myapp:$VERSION_TAG
  only:
    - tags
  
Deploy:
  stage: deploy
  image: bitnami/kubectl:latest  # Image contenant `kubectl`
  script:
    - echo "Connexion à Kubernetes avec l'agent GitLab..."
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CONTENT" > $KUBE_CONFIG_PATH  # Assurez-vous que `KUBECONFIG_CONTENT` est défini dans les variables de CI/CD

    - echo "Déploiement des fichiers YAML dans le cluster Kubernetes..."
    - kubectl apply -f k8s
    - echo "Vérification des pods déployés..."
    - kubectl get pods -n db-namespace
    - kubectl get pods -n default
  only:
    - tags







