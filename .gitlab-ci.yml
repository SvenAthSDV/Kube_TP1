image: docker:latest

services:
  - docker:dind  # Docker-in-Docker

stages:
  - build_and_push

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE/myapp
  VERSION_FILE: version.txt

Build_And_Push:
  stage: build_and_push
  script:
    - echo "Connexion au registre GitLab..."
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - echo "Gestion de la version..."
    - |
      if [ -f "$VERSION_FILE" ]; then
        VERSION=$(cat $VERSION_FILE)   
        NEW_VERSION=$((VERSION + 1))   
      else
        NEW_VERSION=1                 
      fi
      echo $NEW_VERSION > $VERSION_FILE
      VERSION_TAG="v$NEW_VERSION"
      echo "Nouvelle version : $VERSION_TAG"
    - echo "Création du contexte de build..."
    - mkdir -p build_context
    - cp -r myapp/* build_context/
    - cp $VERSION_FILE build_context/ 
    - echo "Construction de l'image Docker..."
    - cd build_context
    - docker build -t $CI_REGISTRY_IMAGE/myapp:$VERSION_TAG .
    - echo "Poussée de l'image dans le registre GitLab..."
    - docker push $CI_REGISTRY_IMAGE/myapp:$VERSION_TAG
    - echo "Commit de la nouvelle version..."
    - cd ..
    - git config --global user.email "ci-bot@example.com"
    - git config --global user.name "GitLab CI Bot"
    - git add $VERSION_FILE
    - git commit -m "CI/CD: Increment version to $VERSION_TAG"
    - git push origin main
  only:
    - main







